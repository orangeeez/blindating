{
  "_args": [
    [
      "delegate-component@0.1.0",
      "E:\\Development\\C#\\ASP.NET\\Blindating Collaborative\\src\\Blindating\\node_modules\\events-component-2"
    ]
  ],
  "_from": "delegate-component@0.1.0",
  "_id": "delegate-component@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/delegate-component",
  "_npmUser": {
    "email": "tj@vision-media.ca",
    "name": "tjholowaychuk"
  },
  "_npmVersion": "1.2.30",
  "_phantomChildren": {},
  "_requested": {
    "name": "delegate-component",
    "raw": "delegate-component@0.1.0",
    "rawSpec": "0.1.0",
    "scope": null,
    "spec": "0.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/events-component-2"
  ],
  "_resolved": "https://registry.npmjs.org/delegate-component/-/delegate-component-0.1.0.tgz",
  "_shasum": "7bb383b0a851efbaaee7f9885f27f0ca3aaccb23",
  "_shrinkwrap": null,
  "_spec": "delegate-component@0.1.0",
  "_where": "E:\\Development\\C#\\ASP.NET\\Blindating Collaborative\\src\\Blindating\\node_modules\\events-component-2",
  "component": {
    "scripts": {
      "delegate/index.js": "index.js"
    }
  },
  "dependencies": {
    "event-component": "*",
    "matches-selector-2": "0.1.0"
  },
  "description": "Event delegation component",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "7bb383b0a851efbaaee7f9885f27f0ca3aaccb23",
    "tarball": "https://registry.npmjs.org/delegate-component/-/delegate-component-0.1.0.tgz"
  },
  "keywords": [
    "event",
    "events",
    "delegate",
    "delegation"
  ],
  "maintainers": [
    {
      "email": "tj@vision-media.ca",
      "name": "tjholowaychuk"
    }
  ],
  "name": "delegate-component",
  "optionalDependencies": {},
  "readme": "\n# delegate\n\n  Low-level event delegation component.\n\n## Installation\n\n    $ component install component/delegate\n\n## Example\n\n```js\nvar delegate = require('delegate');\nvar ul = document.querySelector('ul');\nvar n = 0;\n\nvar fn = delegate.bind(ul, 'li a', 'click', function(e){\n  console.log(e.target);\n  if (++n == 3) {\n    console.log('unbind');\n    delegate.unbind(ul, 'click', fn, false);\n  }\n}, false);\n```\n\n## API\n\n### .bind(el, selector, type, callback, [capture])\n\n  Bind and return a callback which may be passed to `.unbind()`.\n\n### .unbind(el, type, callback, [capture])\n\n  Unbind.\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "version": "0.1.0"
}
